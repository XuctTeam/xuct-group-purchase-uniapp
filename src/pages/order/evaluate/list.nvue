<!--
 * @Author: Derek Xu
 * @Date: 2023-04-23 13:46:26
 * @LastEditors: Derek Xu
 * @LastEditTime: 2023-06-05 22:23:47
 * @FilePath: \xuct-group-purchase-uniapp\src\pages\order\evaluate\list.nvue
 * @Description: 
 * 
 * Copyright (c) 2023 by 楚恬商行, All Rights Reserved. 
-->
<template>
  <tm-app>
    <tm-navbar title="评价列表" color="#32CD32" fontColor="#fff" blur></tm-navbar>
    <uv-empty v-if="orderItems.length === 0 && !load"></uv-empty>
    <tm-card v-else v-for="(item, i) in orderItems" :key="i" :status="formatData(item.createTime)" :title="item.orderId" :margin="[10]" statusColor="green">
      <view class="flex flex-row" @click="detailClick(item.waresId)">
        <tm-image :width="130" :height="130" :round="4" :src="item.waresFirstDrawing" />
        <view class="right">
          <tm-text _class="text-overflow-2" :label="item.waresName"></tm-text>
          <view class="flex flex-row flex-row-center-between pr-10">
            <tm-text color="orange" :label="`单位：${item.waresUnit}`"></tm-text>
            <tm-text color="grey" :label="`×${item.num}`"></tm-text>
          </view>
        </view>
      </view>
      <template #action>
        <view class="flex flex-row flex-row-center-end flex-1">
          <tm-button
            :round="24"
            color="green"
            :margin="[24, 0]"
            label="去评价"
            :font-size="24"
            :width="120"
            :height="64"
            @click="onEvaluateClick(item.id)"
          ></tm-button>
        </view>
      </template>
    </tm-card>
  </tm-app>
</template>
<script lang="ts" setup>
import { reactive, ref } from 'vue'
import tmApp from '@/tmui/components/tm-app/tm-app.vue'
import tmNavbar from '@/tmui/components/tm-navbar/tm-navbar.vue'
import tmCard from '@/tmui/components/tm-card/tm-card.vue'
import tmButton from '@/tmui/components/tm-button/tm-button.vue'
import tmImage from '@/tmui/components/tm-image/tm-image.vue'
import tmText from '@/tmui/components/tm-text/tm-text.vue'
import uvEmpty from '@/components/uv-empty/uv-empty.vue'
import { onLoad, onShow } from '@dcloudio/uni-app'
import { evaluateList } from '@/api/modules/order'
import { hideLoading, loading } from '@/utils/dialog'
import * as dayjs from '@/tmui/tool/dayjs/esm/index'
import { Order } from '@/api/interface'

const DayJs = dayjs.default
const load = ref<boolean>(true)
const orderItems = reactive<Order.OrderItemResult[]>([])
const refreshValue = ref<boolean>(false)

onLoad(() => {
  initData()
})

onShow(() => {
  if (refreshValue.value) {
    initData()
  }
})

const initData = () => {
  loading()
  evaluateList()
    .then((res) => {
      orderItems.length = 0
      orderItems.push(...res.data)
    })
    .catch((err: any) => {
      console.log(err)
    })
    .finally(() => {
      load.value = false
      refreshValue.value = false
      hideLoading()
    })
}

const detailClick = (waresId: string) => {
  uni.$tm.u.routerTo('/pages/wares/index?id=' + waresId, 'navigate')
}

const formatData = (date: Date) => {
  return DayJs(date).format('YYYY-MM-DD HH:mm:ss')
}

const onEvaluateClick = (id: string) => {
  uni.navigateTo({
    url: '/pages/order/evaluate/detail?id=' + id,
    events: {
      acceptDataFromDetail(data: any) {
        const { refresh } = data
        refreshValue.value = refresh ?? false
      }
    }
  })
}
</script>
<style>
.right {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  height: 140rpx;
  flex: 1;
  padding: 10rpx;
}
</style>
