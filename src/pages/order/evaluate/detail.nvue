<!--
 * @Author: Derek Xu
 * @Date: 2023-04-23 13:46:26
 * @LastEditors: Derek Xu
 * @LastEditTime: 2023-05-04 14:44:08
 * @FilePath: \xuct-group-purchase-uniapp\src\pages\order\evaluate\detail.nvue
 * @Description: 
 * 
 * Copyright (c) 2023 by 楚恬商行, All Rights Reserved. 
-->
<template>
  <tm-app>
    <tm-navbar title="商品评价" color="#32CD32" fontColor="#fff" blur></tm-navbar>
    <uv-bottom-bar-page>
      <tm-sheet :round="3" :shadow="2" :margin="[10]" :padding="[20]">
        <view class="pa-10 flex flex-row flex-row-center-between">
          <tm-text _class="font-weight-b" :fontSize="28" label="评价打分"></tm-text>
        </view>
        <tm-divider></tm-divider>
        <tm-rate :default-value="5" v-model="rateValue" icon="tmicon-smile-fill" :color="['red', 'orange', 'primary', 'pink', 'green']" showLabel></tm-rate>
      </tm-sheet>
      <tm-sheet :round="3" :shadow="2" :margin="[10]" :padding="[20]">
        <tm-text _class="font-weight-b" :fontSize="28" label="图片补充"></tm-text>
        <tm-divider></tm-divider>
        <tm-upload
          showSort
          :onStart="onStart"
          color="green"
          v-model="imageList"
          :header="uploadHeader"
          ref="up"
          :width="636"
          :rows="3"
          :maxFile="3"
          :url="uploadUrlValue"
          @fail="onUploadFail"
        >
        </tm-upload>
      </tm-sheet>
      <tm-sheet :round="3" :shadow="2" :margin="[10]" :padding="[20]">
        <view class="pa-10 flex flex-row flex-row-center-between">
          <tm-text _class="font-weight-b" :fontSize="28" label="更多描述"></tm-text>
        </view>
        <tm-divider></tm-divider>
        <tm-input
          v-model="remarksValue"
          :inputPadding="[12]"
          placeholder="更多描述"
          confirm-hold
          showCharNumber
          :maxlength="100"
          :border="1"
          color="grey-5"
          autoHeight
          type="textarea"
        ></tm-input>
      </tm-sheet>
      <template v-slot:footer>
        <view class="flex-1">
          <tm-button label="提交" :round="10" color="green" block @click="onConfirmClick"></tm-button>
        </view>
      </template>
    </uv-bottom-bar-page>
  </tm-app>
</template>
<script lang="ts" setup>
import { ref, getCurrentInstance } from 'vue'
import tmApp from '@/tmui/components/tm-app/tm-app.vue'
import tmNavbar from '@/tmui/components/tm-navbar/tm-navbar.vue'
import tmSheet from '@/tmui/components/tm-sheet/tm-sheet.vue'
import tmRate from '@/tmui/components/tm-rate/tm-rate.vue'
import tmText from '@/tmui/components/tm-text/tm-text.vue'
import tmDivider from '@/tmui/components/tm-divider/tm-divider.vue'
import tmUpload from '@/tmui/components/tm-upload/tm-upload.vue'
import tmInput from '@/tmui/components/tm-input/tm-input.vue'
import uvBottomBarPage from '@/components/uv-bottom-bar-page/uv-bottom-bar-page.vue'
import tmButton from '@/tmui/components/tm-button/tm-button.vue'

import { useUserHook } from '@/store'
import ENV_CONFIG from '@/config/env'
import { onLoad } from '@dcloudio/uni-app'
import { evaluate } from '@/api/order'
import { loading, hideLoading } from '@/utils/dialog'
const $instance = ref<any>(getCurrentInstance()?.proxy)
const { BASE_API_URL } = ENV_CONFIG
const userStore = useUserHook()
const rateValue = ref<number>(5)
const imageList = ref([])
const idValue = ref<string>('')
const remarksValue = ref<string>('')

const uploadUrlValue = ref<string>(BASE_API_URL + '/api/v1/order/evaluate/upload')
const uploadHeader = {
  satoken: 'Bearer ' + userStore.getToken
}
const onStart = (item: any) => {
  console.log(item)
  return true
}
const onUploadFail = () => {}

const onConfirmClick = () => {
  loading()
  const _images = imageList.value
    .filter((x: any) => {
      return JSON.parse(x.response).code === 200
    })
    .map((x: any) => {
      return JSON.parse(x.response).data
    })
  evaluate({
    rate: rateValue.value,
    evaluateImages: _images.join(','),
    remarks: remarksValue.value,
    orderItemId: idValue.value
  })
    .then(() => {
      setPageRefresh()
    })
    .catch((err: any) => {
      console.log(err)
    })
    .finally(() => {
      hideLoading()
    })
}

onLoad((opts: any) => {
  const { id } = opts
  if (!id) {
    return
  }
  idValue.value = id
})

const setPageRefresh = () => {
  let pages = getCurrentPages() // 当前页
  let beforePage = pages[pages.length - 2] // 上个页面
  const channel = $instance.value?.getOpenerEventChannel()
  if (beforePage !== undefined && beforePage.route === 'pages/order/evaluate/list') {
    channel.emit('acceptDataFromDetail', {
      refresh: true
    })
  }
  uni.$tm.u.routerTo('', 'navigateBack')
}
</script>
