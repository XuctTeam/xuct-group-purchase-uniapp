<!--
 * @Author: Derek Xu
 * @Date: 2023-04-06 18:28:56
 * @LastEditors: Derek Xu
 * @LastEditTime: 2023-05-04 18:33:11
 * @FilePath: \xuct-group-purchase-uniapp\src\pages\order\confirm\index.nvue
 * @Description: 
 * 
 * Copyright (c) 2023 by 楚恬商行, All Rights Reserved. 
-->
<template>
  <page-meta :page-style="'overflow:' + (couponWin || showWin ? 'hidden' : 'visible')"></page-meta>
  <tm-app>
    <tm-navbar title="确认订单" color="#32CD32" fontColor="#fff" blur :before-back="beforeBack"></tm-navbar>
    <uv-bottom-bar-page>
      <tm-roll-notice :shadow="2" :round="2" color="#32CD32" :margin="[10, 10]" :text="false" fontColor="#fff" :list="content" @click="noticeClick" />
      <tm-sheet :round="3" :shadow="2" :margin="[10, 10]" :padding="[10, 10]">
        <tm-cell :margin="[0, 0]" :titleFontSize="30" showAvatar @click="addressClick">
          <template v-slot:avatar>
            <tm-icon :font-size="44" name="tmicon-position" color="red"></tm-icon>
          </template>
          <template v-slot:label>
            <view v-if="!address.id">
              <tm-text label="请选择配送地址"></tm-text>
            </view>
            <view v-else>
              <view class="flex flex-row flex-row-bottom-start mt-10 mb-10">
                <tm-text :font-size="36" _class="font-weight-b" :label="`${address.userName}`"></tm-text>
                <view class="ml-10 mr-10">
                  <tm-text :label="`${address.telNumber}`"></tm-text>
                </view>
              </view>
              <tm-text :label="`${address.provinceName}${address.cityName}${address.countyName}${address.detailInfo}`"></tm-text>
            </view>
          </template>
        </tm-cell>
      </tm-sheet>
      <tm-sheet :round="3" :shadow="2" :margin="[10, 10]" :padding="[10, 10]">
        <view v-for="(item, index) in cartGoods" :key="index" class="flex flex-row pa-10">
          <tm-image :width="160" :height="160" :round="4" :src="item.firstDrawing" />
          <view class="flex-card-item-right">
            <tm-text _class="text-overflow-2" :label="item.name"></tm-text>
            <view class="flex flex-row flex-row-center-between pr-10">
              <tm-text color="orange" :label="`单位：${item.unit}`"></tm-text>
              <tm-text color="grey" :label="`×${item.num}`"></tm-text>
            </view>
          </view>
        </view>
        <tm-divider />
        <view class="flex flex-row flex-row-center-between pa-20">
          <tm-text :font-size="26" label="商品共计"></tm-text>
          <tm-text :font-size="26" :label="`×${sumNum}`"></tm-text>
        </view>
      </tm-sheet>
      <tm-sheet :round="3" :shadow="2" :margin="[10, 10]" :padding="[10, 10]">
        <tm-cell
          :margin="[0, 0]"
          :titleFontSize="26"
          title="优惠券"
          rightColor="green"
          :rightText="couponValue.id ? couponValue.couponPrice / 1000 + '元' : '暂未使用'"
          @click="
            () => {
              couponWin = !couponWin
            }
          "
        />
      </tm-sheet>
      <tm-sheet :round="3" :shadow="2" :margin="[10, 10]" :padding="[10, 10]">
        <tm-cell :margin="[0, 0]" :titleFontSize="26" title="使用积分" rightColor="green" :rightText="integralValue" @click="() => (showWin = !showWin)" />
      </tm-sheet>
      <tm-sheet :round="3" :shadow="2" :margin="[10, 10]" :padding="[10, 20]">
        <tm-text :font-size="26" label="备注信息"></tm-text>
        <tm-divider></tm-divider>
        <tm-input
          :inputPadding="[12]"
          v-model="remarksValue"
          placeholder="备注特殊要求"
          confirm-hold
          showCharNumber
          :maxlength="100"
          :border="1"
          color="grey-5"
          autoHeight
          type="textarea"
        ></tm-input>
      </tm-sheet>
      <template v-slot:footer>
        <view class="flex flex-row flex-1 flex-row-center-between">
          <tm-text :label="`已选择${cartGoods.length}件商品`"></tm-text>
          <tm-button label="确认下单" :round="4" color="green" @click="placeOrderClick"></tm-button>
        </view>
      </template>
    </uv-bottom-bar-page>

    <!-- 积分弹出框  --->
    <tmDrawer placement="bottom" v-model:show="showWin" okColor="green" @ok="integraClick" title="积分">
      <tm-radio-group v-model="integralChoose">
        <view class="felx flex-col flex-1">
          <view class="pa-10"><tm-radio color="green" value="none" label="暂不使用"></tm-radio></view>
          <view class="pa-10"><tm-radio color="green" value="all" label="全部使用"></tm-radio></view>
          <view class="pt-10 pl-10 pr-10 flex flex-row flex-row-center-between">
            <tm-radio color="green" value="part" label="使用部分"></tm-radio>
            <tm-text :font-size="24" color="red" _class="font-weight-b" :label="`可用（${userInfo.integral ?? 0}）分`"></tm-text>
          </view>
        </view>
      </tm-radio-group>
      <tm-divider></tm-divider>
      <view class="ma-20" v-if="integralChoose === 'part'">
        <tm-input placeholder="请输入积分" suffixLabel="分" v-model="integralInput" />
      </view>
    </tmDrawer>

    <tm-drawer
      placement="bottom"
      v-model:show="couponWin"
      okColor="green"
      :height="800"
      :footHeight="140"
      title="优惠券"
      color="rgba(245, 245, 245, 1)"
      @ok="onCouponeChoose"
    >
      <tm-coupon
        mainColor="green"
        v-for="(item, i) in userCoupons"
        :key="i"
        :disable="item.used"
        :priceDetail="formatePrice(item)"
        :rightDetail="formatRight(item)"
      >
        <template v-slot:btn>
          <tm-checkbox color="green" :round="24" :disabled="item.used" :value="!!!item.checked" @change="(e) => onConponCheckChage(e, item.id)"></tm-checkbox>
        </template>
      </tm-coupon>
      <template v-slot:foot>
        <tm-button :margin="[10]" block color="green" :round="5" label="暂不使用" @click="onConponNoUsed"></tm-button>
      </template>
    </tm-drawer>
  </tm-app>
</template>
<script lang="ts" setup>
import { computed, reactive, ref, getCurrentInstance } from 'vue'
import tmApp from '@/tmui/components/tm-app/tm-app.vue'
import tmNavbar from '@/tmui/components/tm-navbar/tm-navbar.vue'
import tmSheet from '@/tmui/components/tm-sheet/tm-sheet.vue'
import tmIcon from '@/tmui/components/tm-icon/tm-icon.vue'
import tmCell from '@/tmui/components/tm-cell/tm-cell.vue'
import tmDivider from '@/tmui/components/tm-divider/tm-divider.vue'
import tmImage from '@/tmui/components/tm-image/tm-image.vue'
import tmText from '@/tmui/components/tm-text/tm-text.vue'
import tmButton from '@/tmui/components/tm-button/tm-button.vue'
import tmInput from '@/tmui/components/tm-input/tm-input.vue'
import tmRollNotice from '@/tmui/components/tm-roll-notice/tm-roll-notice.vue'
import tmDrawer from '@/tmui/components/tm-drawer/tm-drawer.vue'
import tmRadio from '@/tmui/components/tm-radio/tm-radio.vue'
import tmRadioGroup from '@/tmui/components/tm-radio-group/tm-radio-group.vue'
import uvBottomBarPage from '@/components/uv-bottom-bar-page/uv-bottom-bar-page.vue'
import tmCoupon from '@/tmui/components/tm-coupon/tm-coupon.vue'
import tmCheckbox from '@/tmui/components/tm-checkbox/tm-checkbox.vue'
import { onLoad } from '@dcloudio/uni-app'
import { useUserHook } from '@/store'
import { TEMPLATE_IDS } from '@/constant'
import * as dayjs from '@/tmui/tool/dayjs/esm/index'

import { loading, hideLoading, confirm, message } from '@/utils/dialog'
import { getDefaultAddress, canUsedCouponList } from '@/api/user'
import { getConfirmOrderDetail } from '@/api/order'
import { placeOrder } from '@/api/order'

const DayJs = dayjs.default
const userStore = useUserHook()
const $instance = ref<any>(getCurrentInstance()?.proxy)
const userInfo: User.UserInfo = userStore.getUserInfo
const content = ref(['点击获取订单实时消息~'])
const goodIds = reactive<string[]>([])
const showWin = ref(false)
const couponWin = ref(false)
const address = ref<User.Address>({
  id: undefined
})
const _scene = ref<string>('')
const integralChoose = ref('none')
const integralInput = ref<number>(0)
const integralValue = ref<string>('暂不使用')
const remarksValue = ref<string>('')
const couponValue = ref<User.Coupon>({ id: '', couponName: '', couponFullPrice: 0, couponPrice: 0, beginTime: new Date(), endTime: new Date(), used: false })

const cartGoods = reactive<Good.Cart[]>([])
const userCoupons = reactive<User.Coupon[]>([])

onLoad((ops: any) => {
  let { gids, scene } = ops
  if (!gids) {
    message({
      title: '获取参数失败',
      icon: 'error'
    })
    return
  }
  _scene.value = scene
  /** 加载地址 */
  _loadAddress()
  const jsonGids = JSON.parse(gids)
  /** 加载详情 */
  _loadDetail(scene, jsonGids)
  goodIds.push(...jsonGids)
  /**  加载优惠券 */
  _loadCounpons()
})

const sumNum = computed(() => {
  return cartGoods
    .map((item) => item.num)
    .reduce((prev, cur) => {
      return prev + cur
    }, 0)
})

const noticeClick = () => {
  uni.requestSubscribeMessage({
    tmplIds: TEMPLATE_IDS,
    complete: (res) => {
      console.log(res)
    }
  })
}

const addressClick = () => {
  uni.navigateTo({
    url: '/pages/member/address/list?type=order',
    events: {
      acceptDataFromDetail(data: any) {
        address.value = { ...data }
      }
    }
  })
}

const integraClick = () => {
  integralInput.value = uni.$tm.u.isNumber(integralInput.value, 0)
  if (integralInput.value > (userInfo.integral ?? 0)) {
    integralInput.value = userInfo.integral ?? 0
  }
  switch (integralChoose.value) {
    case 'all':
      integralValue.value = '全部使用'
      break
    case 'part':
      integralValue.value = integralInput.value + '分'
      break
    default:
      integralValue.value = '暂不使用'
  }
}

const placeOrderClick = () => {
  let integral: number
  switch (integralChoose.value) {
    case 'all':
      integral = -999
      break
    case 'part':
      integral = integralInput.value
      break
    default:
      integral = 0
  }
  confirm({
    title: '确认订单内容无误？',
    success: () => {
      loading()
      placeOrder(_scene.value, address.value.id ?? '', couponValue.value.id ?? '', integral, remarksValue.value, goodIds)
        .then((res: any) => {
          const orderId = res.data
          uni.$tm.u.routerTo('/pages/order/result/index?orderId=' + orderId, 'redirect')
        })
        .catch((err: any) => {
          console.log(err)
        })
        .finally(() => {
          hideLoading()
        })
    },
    fail: () => {}
  })
}

const beforeBack = () => {
  setCartListRefresh()
  return true
}

const formatePrice = (item: User.Coupon) => {
  return {
    price: item.couponPrice / 1000,
    suffix: '元',
    prefix: '',
    subtext: '满减券'
  }
}

const formatRight = (item: User.Coupon) => {
  return {
    title: item.couponName,
    subtitle: item.couponFullPrice > 0 ? '满' + item.couponFullPrice / 1000 + '元可用' : '不限制金额',
    time: '有效期：' + DayJs(item.beginTime).format('YYYY-MM-DD') + '至' + DayJs(item.endTime).format('YYYY-MM-DD')
  }
}

const setCartListRefresh = () => {
  let pages = getCurrentPages() // 当前页
  let beforePage = pages[pages.length - 2] // 上个页面
  const channel = $instance.value?.getOpenerEventChannel()
  if (beforePage !== undefined && beforePage.route === 'pages/cart/index') {
    channel.emit('acceptDataFromDetail', {
      refresh: false
    })
  }
}

const onConponCheckChage = (value: any, id: string) => {
  userCoupons.forEach((item) => {
    item.checked = item.id === id ? value : false
  })
}

const onCouponeChoose = () => {
  const _data = userCoupons.find((item) => item.checked)
  if (!_data) {
    return
  }
  Object.assign(couponValue.value, { ..._data })
}

const onConponNoUsed = () => {
  userCoupons.forEach((item) => (item.checked = false))
  Object.assign(couponValue.value, { id: '', couponName: '', couponFullPrice: 0, couponPrice: 0, beginTime: new Date(), endTime: new Date(), used: false })
  couponWin.value = false
}

const _loadAddress = () => {
  getDefaultAddress()
    .then((res) => {
      const { data } = res
      if (!data) {
        return
      }
      address.value = { ...data }
    })
    .catch((err: any) => {
      console.log(err)
    })
}

const _loadDetail = (scene: string, gids: string[]) => {
  loading()
  getConfirmOrderDetail(scene, gids)
    .then((res) => {
      cartGoods.push(...res.data)
      hideLoading()
    })
    .catch((err: any) => {
      console.log(err)
      hideLoading()
    })
}

const _loadCounpons = () => {
  canUsedCouponList()
    .then((res) => {
      const data = res.data.sort((a, b) => (a.used ? 1 : 0) - (b.used ? 1 : 0))
      userCoupons.push(...data)
    })
    .catch((err: any) => {
      console.log(err)
    })
}
</script>
<style></style>
