<!--
 * @Author: Derek Xu
 * @Date: 2023-03-24 08:58:16
 * @LastEditors: Derek Xu
 * @LastEditTime: 2023-05-16 19:51:23
 * @FilePath: \xuct-group-purchase-uniapp\src\pages\index\index.nvue
 * @Description: 
 * 
 * Copyright (c) 2023 by 楚恬商行, All Rights Reserved. 
-->
<template>
  <tm-app>
    <tm-navbar title="团到家" hideHome color="#32CD32" fontColor="#fff" blur></tm-navbar>
    <tm-sheet :margin="[20, 20]" :padding="[0, 0, 0, 20]" :height="520" :round="10">
      <tm-carousel
        autoplay
        :round="10"
        :margin="[0, 0]"
        :width="700"
        :height="300"
        :list="bannerImages"
        :display-multiple-items="0"
        rangKey="image"
      ></tm-carousel>
      <tm-row :width="700" :column="4" :margin="[0, 30]">
        <tm-col transprent :height="200" v-for="(item, index) in menus" :key="index">
          <tm-image :width="140" :height="140" :src="`/static/images/menu-${item.id}.png`"></tm-image>
          <tm-text _class="text-overflow-1" color="rgba(153, 153, 153, 1)" :font-size="28" :label="item.title"></tm-text>
        </tm-col>
      </tm-row>
    </tm-sheet>
    <view class="good-list">
      <tm-spin :load="load" color="green" tip="加载中" :margin="[10]">
        <uv-empty v-if="goodInfos.list.length === 0" :height="400"></uv-empty>
        <template v-else>
          <uv-waterfall-flow ref="waterfallRef" :value="goodInfos.list" :column="column" :columnSpace="1" :seat="2" imageKey="firstDrawing" @click="itemClick">
            <view class="item" v-for="(item, index) in goodInfos.list" :key="index" :slot="`slot${index}`">
              <tm-text :label="item.name" _class="text-overflow-3"></tm-text>
              <view class="flex flex-row flex-row-center-start mt-10 mb-10">
                <tm-tag size="xs" :color="formatTag(i)" :margin="[0, 0, 10, 0]" v-for="(tag, i) in item.tags?.split(',')" :key="i" :label="tag"></tm-tag>
              </view>
              <view class="flex flex-row flex-row-bottom-start mb-10 mt-10">
                <tm-text color="grey" :font-size="24" label="库存:"></tm-text>
                <tm-text color="grey" :font-size="24" :label="item.inventory"></tm-text>
              </view>
            </view>
          </uv-waterfall-flow>
        </template>
      </tm-spin>
    </view>
  </tm-app>
</template>
<script lang="ts" setup>
import { ref, reactive } from 'vue'
import { onLoad, onPullDownRefresh } from '@dcloudio/uni-app'
import tmApp from '@/tmui/components/tm-app/tm-app.vue'
import tmText from '@/tmui/components/tm-text/tm-text.vue'
import uvWaterfallFlow from '@/components/uv-waterfall-flow/uv-waterfall-flow.vue'
import tmSpin from '@/tmui/components/tm-spin/tm-spin.vue'
import tmNavbar from '@/tmui/components/tm-navbar/tm-navbar.vue'
import tmCarousel from '@/tmui/components/tm-carousel/tm-carousel.vue'
import tmSheet from '@/tmui/components/tm-sheet/tm-sheet.vue'
import tmImage from '@/tmui/components/tm-image/tm-image.vue'
import tmTag from '@/tmui/components/tm-tag/tm-tag.vue'
import tmRow from '@/tmui/components/tm-row/tm-row.vue'
import tmCol from '@/tmui/components/tm-col/tm-col.vue'
import uvEmpty from '@/components/uv-empty/uv-empty.vue'
import { bannerList } from '@/api/banner'
import { goodList } from '@/api/good'

interface GoodList {
  list: Good.GoodResult[]
}

const goodInfos = reactive<GoodList>({
  list: [
    {
      id: '',
      name: '',
      firstDrawing: '',
      startTime: new Date(),
      inventory: 0,
      blurb: ''
    }
  ]
})
const bannerImages = reactive<API.BannerResult[]>([])
const column = ref(2)
const load = ref(true)
const waterfallRef = ref()

const menus = [
  { id: '1', title: '热销榜单' },
  { id: '2', title: '包邮产品' },
  { id: '3', title: '奶类蛋品' },
  { id: '4', title: '酒水饮料' }
]

onLoad(() => {
  initData()
})

const initData = () => {
  _loadBanner()
  _loadGoods()
}

const _loadBanner = () => {
  bannerList()
    .then((res) => {
      bannerImages.length = 0
      bannerImages.push(...res.data)
    })
    .catch((err: any) => {
      console.log(err)
    })
}

const _loadGoods = () => {
  load.value = true
  goodList()
    .then((res) => {
      goodInfos.list = res.data
    })
    .catch((err) => {
      console.log(err)
    })
    .finally(() => {
      load.value = false
    })
}

const bannerClick = (index: number) => {
  debugger
}

const formatTag = (i: number) => {
  switch (i) {
    case 0:
      return 'red'
    case 1:
      return 'orange'
    default:
      return 'green'
  }
}

onPullDownRefresh(() => {
  waterfallRef.value?.reset()
  initData()
  setTimeout(() => {
    uni.stopPullDownRefresh()
  }, 300)
})

function itemClick(index: number) {
  uni.$tm.u.routerTo('/pages/good/index?id=' + goodInfos.list[index].id, 'navigate')
}
</script>
<style>
.good-list {
  padding: 20rpx;
  margin-top: 20rpx;
  min-height: 200rpx;
  display: flex;
  justify-content: center;
}

.good-list .item {
  padding: 10rpx 20rpx;
  background-color: #fff;
  border-radius: 0 0 10px 10px;
}

.good-list .item .title {
  line-height: 48rpx;
  font-size: 28rpx;
  color: #222;
}

.good-list .item .desc {
  font-size: 28rpx;
  color: #666;
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
}

.good-list .item .money {
  color: #f2280d;
  font-size: 36rpx;
  font-weight: bold;
  padding: 10rpx 0 0;
}
</style>
