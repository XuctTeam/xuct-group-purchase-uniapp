<!--
 * @Author: Derek Xu
 * @Date: 2023-03-17 13:42:03
 * @LastEditors: Derek Xu
 * @LastEditTime: 2023-04-07 09:38:16
 * @FilePath: \xuct-group-purchase-uniapp\src\pages\member\login\index.nvue
 * @Description: 
 * 
 * Copyright (c) 2023 by 楚恬商行, All Rights Reserved. 
-->
<template>
  <tm-app>
    <tm-navbar title="授权登录" color="#70DB93" fontColor="white" />
    <view class="login-m">
      <view class="login-item">
        <view class="logo">
          <open-data type="userAvatarUrl"></open-data>
        </view>
      </view>
      <view class="login-tip">
        <view class="login-tip-big">申请获取以下权限</view>
        <view class="login-tip-small">获得你的公开信息 （昵称、头像等）</view>
      </view>
    </view>
    <view class="login-b flc">
      <tm-button :round="6" label="拒绝" @click="reject"></tm-button>
      <tm-button :round="6" :linear-color="['#ea3c2d', '#ff9d14']" color="orange" font-color="white" linear="left" label="允许" @click="login"></tm-button>
    </view>
  </tm-app>
</template>
<script lang="ts" setup>
import tmApp from '@/tmui/components/tm-app/tm-app.vue'
import tmNavbar from '@/tmui/components/tm-navbar/tm-navbar.vue'
import tmButton from '@/tmui/components/tm-button/tm-button.vue'

import { loginByCode } from '@/api/login'
import { useUserHook } from '@/store'
import { confirm, loading, hideLoading } from '@/utils/dialog'

const userStore = useUserHook()

const login = () => {
  _login()
    .then((res: any) => {
      const { tokenValue, ...user } = res
      userStore.setToken(tokenValue)
      userStore.setUserInfo(user)
      back()
    })
    .catch((err: any) => {
      console.log(err)
    })
}

const back = () => {
  const pLenth = getCurrentPages().length
  uni.$tm.u.routerTo(pLenth === 1 ? '/pages/index/index' : '', pLenth === 1 ? 'redirect' : 'navigateBack')
}

const reject = () => {
  confirm({
    title: '拒绝后将无法进行登录！',
    success: () => {
      back()
    },
    fail: (msg: any) => {
      console.log(msg)
    }
  })
}

const _login = () => {
  return new Promise((resolve, reject) => {
    uni.login({
      provider: 'weixin', //使用微信登录
      success: async loginRes => {
        loading()
        try {
          const loinResult = await loginByCode(loginRes.code)
          const { tokenValue, user } = loinResult.data
          hideLoading()
          return resolve({
            tokenValue,
            ...user
          })
        } catch (err) {
          console.log(err)
          hideLoading()
          return reject(err)
        }
      },
      fail(result: any) {
        hideLoading()
        return reject(result)
      }
    })
  })
}
</script>
<style>
.login-item {
  display: flex;
  justify-content: center;
  padding-bottom: 40upx;
  border-bottom: 1upx solid #dddddd;
  align-items: center;
  margin-top: 30upx;
}
.logo {
  display: block;
  width: 180upx;
  height: 180upx;
  border-radius: 50%;
  overflow: hidden;
  border: 2px solid #fff;
  box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.2);
}

.login-tip {
  padding: 30upx;
}

.login-tip-big {
  font-size: 28upx;
  line-height: 80upx;
}

.login-tip-small {
  font-size: 12px;
  color: #9e9e9e;
}
.app-name {
  font-size: 28upx;
  color: #999;
}

.login-b {
  display: flex;
  flex-direction: row;
  width: 100%;
  align-items: center;
  justify-content: space-around;
}

.login-b .btn-g {
  margin-top: 40upx;
}

.confirm {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 40px;
  line-height: 40px;
}
</style>
