<!--
 * @Author: Derek Xu
 * @Date: 2023-04-19 19:01:43
 * @LastEditors: Derek Xu
 * @LastEditTime: 2023-04-24 13:24:07
 * @FilePath: \xuct-group-purchase-uniapp\src\pages\member\collect\index.nvue
 * @Description: 
 * 
 * Copyright (c) 2023 by 楚恬商行, All Rights Reserved. 
-->
<template>
  <tm-app>
    <tm-navbar title="我的收藏" color="#32CD32" fontColor="#fff" blur></tm-navbar>
    <template v-if="collectData.length === 0 && !loadValue">
      <tm-result :showBtn="false" color="green" title="空空如也哦~" subTitle="快去收藏吧"></tm-result>
    </template>
    <template v-else>
      <tm-sheet :margin="[10, 10]" :padding="[10, 10]" :shadow="4" :round="2" v-for="(item, index) in collectData" :key="index">
        <tm-slide-switch :width="700" :height="140">
          <view class="flex flex-row flex-1" @click="itemClick(item.id)">
            <tm-image :width="140" :round="4" :height="140" :src="item.firstDrawing"></tm-image>
            <view class="flex flex-1 flex-col flex-col-between-center pa-10 w-0">
              <tm-text _class="text-overflow-2" :label="item.name"></tm-text>
              <view class="flex flex-row flex-row-center-between">
                <tm-text color="orange" :label="`单位：${item.unit}`" />
              </view>
            </view>
          </view>
          <template v-slot:right>
            <view class="flex flex-row flex-row-center-end">
              <tm-sheet :width="100" _class="flex flex-row flex-row-center-center" :height="140" color="green" no-level :margin="[0]" :padding="[0]">
                <tm-text :userInteractionEnabled="false" label="取消" @click="onCllect(item.id)"></tm-text>
              </tm-sheet>
            </view>
          </template>
        </tm-slide-switch>
      </tm-sheet>
    </template>
  </tm-app>
</template>
<script lang="ts" setup>
import { computed, reactive, ref, nextTick } from 'vue'
import tmApp from '@/tmui/components/tm-app/tm-app.vue'
import tmNavbar from '@/tmui/components/tm-navbar/tm-navbar.vue'
import tmSheet from '@/tmui/components/tm-sheet/tm-sheet.vue'
import tmText from '@/tmui/components/tm-text/tm-text.vue'
import tmImage from '@/tmui/components/tm-image/tm-image.vue'
import tmSlideSwitch from '@/tmui/components/tm-slide-switch/tm-slide-switch.vue'
import tmResult from '@/tmui/components/tm-result/tm-result.vue'

import { onLoad, onShow } from '@dcloudio/uni-app'
import { loading, hideLoading } from '@/utils/dialog'
import { collect, collectList } from '@/api/good'

const loadValue = ref<boolean>(false)
const collectData = reactive<Good.GoodResult[]>([])
const refreshValue = ref<boolean>(false)

onLoad(() => {
  initData()
})

onShow(() => {
  if (refreshValue.value) {
    initData()
  }
})

const initData = () => {
  loading()
  collectData.length = 0
  loadValue.value = true
  collectList()
    .then((res) => {
      collectData.push(...res.data)
    })
    .catch((err: any) => {
      console.log(err)
    })
    .finally(() => {
      loadValue.value = false
      refreshValue.value = false
      hideLoading()
    })
}

const itemClick = (gid: string) => {
  uni.navigateTo({
    url: '/pages/good/index?id=' + gid,
    events: {
      acceptDataFromDetail(data: any) {
        const { refresh } = data
        refreshValue.value = refresh ?? false
      }
    }
  })
}

const onCllect = (gid: string) => {
  collect(gid)
    .then(() => {
      _removeItem(gid)
    })
    .catch((err) => {
      console.log(err)
    })
}

const _removeItem = (gid: string) => {
  const _values = collectData.filter((i) => {
    return i.id !== gid
  })
  setTimeout(() => {
    collectData.length = 0
    collectData.push(..._values)
  }, 500)
}
</script>
