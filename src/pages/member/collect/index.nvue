<!--
 * @Author: Derek Xu
 * @Date: 2023-04-19 19:01:43
 * @LastEditors: Derek Xu
 * @LastEditTime: 2023-06-08 09:08:06
 * @FilePath: \xuct-group-purchase-uniapp\src\pages\member\collect\index.nvue
 * @Description: 
 * 
 * Copyright (c) 2023 by 楚恬商行, All Rights Reserved. 
-->
<template>
  <tm-app>
    <tm-navbar title="我的收藏" color="#32CD32" fontColor="#fff" blur></tm-navbar>
    <template v-if="collectData.length === 0 && !loadValue">
      <uv-empty></uv-empty>
    </template>
    <view class="safe-area" v-else>
      <tm-card v-for="(item, index) in collectData" :key="index" :margin="[10]">
        <template #title>
          <tm-text _class="text-overflow-2" label="收藏日期"></tm-text>
        </template>
        <template #status>
          <tm-text _class="text-overflow-2" :label="formatData(item.createTime)"></tm-text>
        </template>
        <template #content>
          <view class="flex flex-row flex-1" @click="itemClick(item.id)">
            <tm-image :width="140" :round="4" :height="140" :src="item.firstDrawing"></tm-image>
            <view class="flex flex-1 flex-col flex-col-between-center pa-10 w-0">
              <tm-text _class="text-overflow-2" :label="item.name"></tm-text>
              <view class="flex flex-row flex-row-center-between">
                <tm-text color="orange" :label="`单位：${item.unit}`" />
              </view>
            </view>
          </view>
        </template>
        <template #action>
          <view class="flex flex-row flex-row-center-end flex-1">
            <tm-button :round="24" color="white" label="取消" :font-size="24" :width="120" :height="64" @click="onCollect(item.id)"></tm-button>
          </view>
        </template>
      </tm-card>
    </view>
  </tm-app>
</template>
<script lang="ts" setup>
import { reactive, ref } from 'vue'
import tmApp from '@/tmui/components/tm-app/tm-app.vue'
import tmNavbar from '@/tmui/components/tm-navbar/tm-navbar.vue'
import tmText from '@/tmui/components/tm-text/tm-text.vue'
import tmImage from '@/tmui/components/tm-image/tm-image.vue'
import tmCard from '@/tmui/components/tm-card/tm-card.vue'
import tmButton from '@/tmui/components/tm-button/tm-button.vue'
import uvEmpty from '@/components/uv-empty/uv-empty.vue'

import * as dayjs from '@/tmui/tool/dayjs/esm/index'
import { onLoad, onShow } from '@dcloudio/uni-app'
import { collectApi, collectListApi } from '@/api/modules/wares'
import { User } from '@/api/interface'

const DayJs = dayjs.default
const loadValue = ref<boolean>(false)
const collectData = reactive<User.Collect[]>([])
const refreshValue = ref<boolean>(false)

onLoad(() => {
  initData()
})

onShow(() => {
  if (refreshValue.value) {
    initData()
  }
})

const initData = () => {
  collectData.length = 0
  loadValue.value = true
  collectListApi()
    .then((res) => {
      collectData.push(...res.data)
    })
    .catch((err: any) => {
      console.log(err)
    })
    .finally(() => {
      loadValue.value = false
      refreshValue.value = false
    })
}

const itemClick = (waresId: string) => {
  uni.navigateTo({
    url: '/pages/wares/index?id=' + waresId,
    events: {
      acceptDataFromDetail(data: any) {
        const { refresh } = data
        refreshValue.value = refresh ?? false
      }
    }
  })
}

const formatData = (date: Date) => {
  return DayJs(date).format('YYYY-MM-DD HH:mm:ss')
}

const onCollect = (waresId: string) => {
  collectApi(waresId)
    .then(() => {
      _removeItem(waresId)
    })
    .catch((err) => {
      console.log(err)
    })
}

const _removeItem = (gid: string) => {
  const _values = collectData.filter((i) => {
    return i.id !== gid
  })
  setTimeout(() => {
    collectData.length = 0
    collectData.push(..._values)
  }, 500)
}
</script>
