<!--
 * @Author: Derek Xu
 * @Date: 2023-03-22 12:22:42
 * @LastEditors: Derek Xu
 * @LastEditTime: 2023-05-04 09:22:23
 * @FilePath: \xuct-group-purchase-uniapp\src\pages\member\setting\index.nvue
 * @Description: 
 * 
 * Copyright (c) 2023 by 楚恬商行, All Rights Reserved. 
-->
<template>
  <tm-app>
    <tm-navbar title="个人设置" color="#32CD32" fontColor="#fff" blur></tm-navbar>
    <tm-sheet :margin="[10, 20]" :shadow="4" :round="2">
      <view class="flex flex-row flex-row-center-start">
        <tm-divider color="green" :border="14" real-color vertical :height="30"></tm-divider>
        <view class="font-weight-b">基础资料</view>
      </view>
      <tm-divider></tm-divider>
      <tm-cell :titleFontSize="28" bottomBorder title="个人资料" :margin="[0, 0]" @click="personClick" />
      <tm-cell :titleFontSize="28" bottomBorder title="我的积分" :margin="[0, 0]" />
    </tm-sheet>
    <tm-sheet :margin="[10, 20]" :shadow="4" :round="2">
      <view class="flex flex-row flex-row-center-start">
        <tm-divider color="green" :border="14" real-color vertical :height="30"></tm-divider>
        <view class="font-weight-b">反馈建议</view>
      </view>
      <tm-divider></tm-divider>
      <tm-cell :titleFontSize="28" bottomBorder title="意见反馈" :margin="[0, 0]" url="/pages/member/opinion/list"/>
    </tm-sheet>
    <tm-sheet :margin="[10, 20]" :shadow="4" :round="2">
      <view class="flex flex-row flex-row-center-start">
        <tm-divider color="green" :border="14" real-color vertical :height="30"></tm-divider>
        <view class="font-weight-b">产品介绍</view>
      </view>
      <tm-divider></tm-divider>
      <tm-cell :titleFontSize="28" bottomBorder title="隐私协议" :margin="[0, 0]" url="/pages/public/userprotocol" />
      <tm-cell :titleFontSize="28" bottomBorder title="版本号" :rightText="versionRef" :margin="[0, 0]" />
    </tm-sheet>

    <tm-button block label="退出登录" color="green" :margin="[10, 20]" @click="onQuitClick"></tm-button>

    <tm-drawer placement="bottom" v-model:show="showWin" okText="保存" okColor="green" :before-ok="beforeSave" @ok="onSave">
      <tm-cell showAvatar :avatar="userInfo.avatar ?? '/static/images/me.png'" :avatarSize="80" :titleFontSize="30" bottomBorder>
        <template v-slot:right>
          <tm-button color="green" size="small" text label="获取头像" @chooseavatar="chooseavatar" open-type="chooseAvatar"></tm-button>
        </template>
      </tm-cell>
      <tm-cell title="昵称" bottomBorder>
        <template v-slot:right>
          <input type="nickname" class="nickname_input" placeholder-class="nickname_placeholder" placeholder="请输入昵称" maxlength="15" :value="nickNameRef" @change="nickNameChage" />
        </template>
      </tm-cell>
      <tm-cell title="手机号" bottomBorder>
        <template v-slot:right>
          <input class="nickname_input" placeholder-class="nickname_placeholder" placeholder="请输入手机号" maxlength="15" :value="phoneRef" @change="phoneChage" />
        </template>
      </tm-cell>
    </tm-drawer>
  </tm-app>
</template>
<script lang="ts" setup>
import { ref } from 'vue'
import tmApp from '@/tmui/components/tm-app/tm-app.vue'
import tmNavbar from '@/tmui/components/tm-navbar/tm-navbar.vue'
import tmSheet from '@/tmui/components/tm-sheet/tm-sheet.vue'
import tmCell from '@/tmui/components/tm-cell/tm-cell.vue'
import tmDivider from '@/tmui/components/tm-divider/tm-divider.vue'
import tmDrawer from '@/tmui/components/tm-drawer/tm-drawer.vue'
import tmButton from '@/tmui/components/tm-button/tm-button.vue'
import { onLoad } from '@dcloudio/uni-app'
import { getConfig } from '@/api/config'
import { confirm, hideLoading, loading, message } from '@/utils/dialog'
import { useUserHook } from '@/store'
import { upload } from '@/services/upload'
import { saveUserInfo } from '@/api/user'
import { logout } from '@/api/login'

const versionRef = ref<string>('')
const showWin = ref(false)
const userStore = useUserHook()
const userInfo = userStore.getUserInfo

const nickNameRef = ref<string>(userInfo?.nickname || '')
const phoneRef = ref<string>(userInfo?.phone || '')

onLoad(() => {
  getConfig(2).then((res) => {
    const { content } = res.data
    versionRef.value = content
  })
})

const personClick = () => {
  showWin.value = true
}

const chooseavatar = (avatar: any) => {
  const tempPath = avatar?.detail?.avatarUrl
  if (!tempPath) {
    message({
      title: '头像选择失败',
      icon: 'error'
    })
    return
  }
  upload(tempPath, {}, ({ code, data }: API.UploadResult) => {
    if (code === -1) {
      message({
        title: data,
        icon: 'error'
      })
      return
    }
    userStore.setUserInfo({ ...userInfo, avatar: data })
  })
}

const nickNameChage = (e: any) => {
  nickNameRef.value = e.detail?.value
}

const phoneChage = (e: any) => {
  phoneRef.value = e.detail?.value
}

const beforeSave = () => {
  if (!nickNameRef.value) {
    message({
      title: '昵称不能为空',
      icon: 'error'
    })
    return false
  }
  if (!phoneRef.value) {
    message({
      title: '电话不能为空',
      icon: 'error'
    })
    return false
  }

  if (!uni.$tm.u.isPhone(phoneRef.value)) {
    message({
      title: '手机格式错误',
      icon: 'error'
    })
    return false
  }
  return true
}

const onSave = () => {
  loading()
  saveUserInfo(phoneRef.value, nickNameRef.value)
    .then(() => {
      userStore.setUserInfo({ ...userInfo, nickname: nickNameRef.value, phone: phoneRef.value })
      showWin.value = false
    })
    .catch((err: any) => {
      console.log(err)
      showWin.value = false
    })
    .finally(() => {
      hideLoading()
    })
}

const onQuitClick = () => {
  confirm({
    title: '确定登出吗？',
    success: () => {
      loading()
      logout()
        .then(() => {
          userStore.setLogout()
          uni.$tm.u.routerTo('', 'navigateBack')
        })
        .catch((err: any) => {})
        .finally(() => {
          hideLoading()
        })
    },
    fail: () => {}
  })
}
</script>

<style>
.nickname_placeholder,
.nickname_input {
  text-align: right;
}
</style>
