<!--
 * @Author: Derek Xu
 * @Date: 2023-03-15 22:02:25
 * @LastEditors: Derek Xu
 * @LastEditTime: 2023-04-24 15:17:11
 * @FilePath: \xuct-group-purchase-uniapp\src\pages\member\index\index.nvue
 * @Description: 
 * Copyright (c) 2022 by 楚恬商行, All Rights Reserved. 
-->
<template>
  <tm-app>
    <tm-navbar title="个人中心" color="#32CD32" fontColor="#fff" :shadow="0"></tm-navbar>
    <!-- 用户头像header -->
    <view class="box">
      <view class="head_top">
        <view class="avatar flex flex-row flex-row-center-start">
          <template v-if="logged">
            <tm-avatar :size="120" :img="userInfo.avatar ?? '/static/images/me.png'" :round="25" />
            <view class="flex flex-col flex-col-bottom-start ml-20">
              <tm-text :font-size="34" color="white" :label="userInfo.nickname" />
              <view class="flex flex-row flex-row-center-start mt-26" v-if="userInfo.phone">
                <tm-icon :font-size="26" name="tmicon-gem" color="white"></tm-icon>
                <view class="ml-4">
                  <tm-text :font-size="28" color="white" :label="userInfo.phone" />
                </view>
              </view>
              <view class="mt-20" v-else>
                <tm-button :round="10" icon="tmicon-md-phone-portrait" :fontSize="24" color="green" :width="160" :height="50" :margin="[0]" :padding="[0]" label="绑定手机" openType="getPhoneNumber" @getphonenumber="getphonenumber"></tm-button>
              </view>
            </view>
          </template>
          <view class="flex flex-row flex-row-center-start" v-else>
            <view class="user-head-img">
              <open-data type="userAvatarUrl"></open-data>
            </view>
            <view class="ml-20">
              <tm-text :font-size="28" _class="font-weight-b" color="white" label="未登录"></tm-text>
              <tm-button color="green" borderStyle="dashed" :round="5" size="small" url="/pages/member/login/index" label="点我登录" :margin="[0, 10]"></tm-button>
            </view>
          </view>
        </view>
      </view>
      <view class="menu">
        <tm-sheet :round="3" :shadow="2" :margin="[10]" :padding="[10]" :height="120">
          <tm-row :width="720" :column="3" :gutter="5">
            <tm-col :margin="[4, 0]" :height="120" :borderGutter="[0, 0, index === 2 ? 0 : 1, 0]" v-for="(item, index) in meSelfSumItems" :key="index">
              <view class="flex-1 flex flex-col flex-col-center-center">
                <tm-text :label="item.nums"></tm-text>
                <view class="mt-14">
                  <tm-text color="grey" :fontSize="24" :label="item.name"></tm-text>
                </view>
              </view>
            </tm-col>
          </tm-row>
        </tm-sheet>

        <!-- 订单列表信息 -->
        <tm-sheet :round="3" :shadow="2" :margin="[10]" :padding="[10]">
          <tm-cell :margin="[0, 0]" rightText="全部订单" url="/pages/order/list/index">
            <template v-slot:title>
              <tm-text :font-size="30" _class="font-weight-b" label="我的订单"></tm-text>
            </template>
          </tm-cell>
          <tm-grid :col="5" class="border-t-1" :width="720">
            <tm-grid-item :count="item.nums" v-for="(item, index) in orderItems" color="orange" :key="index" :height="160" @click="orderItemClick(item.key)">
              <template v-if="item.width">
                <tm-icon :name="item.icon" :_style="{ width: item.width + 'rpx', height: item.height + 'rpx' }"></tm-icon>
              </template>
              <template v-else>
                <tm-icon :font-size="48" :name="item.icon"></tm-icon>
              </template>
              <tm-text _class="pt-16" color="rgba(102, 102, 102, 1)" :font-size="24" :label="item.name"></tm-text>
            </tm-grid-item>
          </tm-grid>
        </tm-sheet>
        <!--我的服务-->
        <tm-sheet :round="3" :shadow="2" :margin="[10]" :padding="[10]">
          <tm-cell :margin="[0, 0]">
            <template v-slot:title>
              <tm-text :font-size="30" _class="font-weight-b" label="我的服务"></tm-text>
            </template>
            <template v-slot:right><view></view></template>
          </tm-cell>
          <tm-grid :col="4" class="border-t-1" :width="720">
            <tm-grid-item :height="160" v-for="(item, index) in serviceItems" :key="index" @click="serviceItemClick(item.code)">
              <tm-icon :font-size="60" :name="item.icon"></tm-icon>
              <tm-text _class="pt-16" color="rgba(102, 102, 102, 1)" :font-size="24" :label="item.name"></tm-text>
            </tm-grid-item>
          </tm-grid>
        </tm-sheet>
      </view>
    </view>
  </tm-app>
</template>
<script lang="ts" setup>
import { ref, reactive, watch } from 'vue'
import { storeToRefs } from 'pinia'
import tmApp from '@/tmui/components/tm-app/tm-app.vue'
import tmCell from '@/tmui/components/tm-cell/tm-cell.vue'
import tmAvatar from '@/tmui/components/tm-avatar/tm-avatar.vue'
import tmNavbar from '@/tmui/components/tm-navbar/tm-navbar.vue'
import tmGridItem from '@/tmui/components/tm-grid-item/tm-grid-item.vue'
import tmGrid from '@/tmui/components/tm-grid/tm-grid.vue'
import tmText from '@/tmui/components/tm-text/tm-text.vue'
import tmIcon from '@/tmui/components/tm-icon/tm-icon.vue'
import tmSheet from '@/tmui/components/tm-sheet/tm-sheet.vue'
import tmButton from '@/tmui/components/tm-button/tm-button.vue'
import tmRow from '@/tmui/components/tm-row/tm-row.vue'
import tmCol from '@/tmui/components/tm-col/tm-col.vue'

// 导入storeToRefs
import { useUserHook, useCountHook } from '@/store'
import { onLoad } from '@dcloudio/uni-app'
import { sumCount } from '@/api/order'
import { bindPhone } from '@/api/user'

const userStore = useUserHook()
const countStore = useCountHook()

// 解构的时候调用storeToRefs
const { logged } = storeToRefs(userStore)
const { canRefresh } = storeToRefs(countStore)
const userInfo = userStore.getUserInfo

const meSelfSumItems = reactive([
  {
    key: '1',
    name: '我的积分',
    nums: 0
  },
  {
    key: '2',
    name: '我的足迹',
    nums: 0
  },
  {
    key: '3',
    name: '我的收藏',
    nums: 0
  }
])

const orderItems = reactive([
  {
    key: '1',
    name: '待付款',
    icon: '/static/images/me-ic-obligation.png',
    nums: 0
  },
  {
    key: '2',
    name: '待发货',
    icon: '/static/images/me-ic-sendout.png',
    nums: 0
  },
  {
    key: '3',
    name: '待收货',
    icon: '/static/images/me-ic-receiving.png',
    nums: 0
  },
  {
    key: '4',
    name: '待评价',
    icon: '/static/images/me-ic-evaluate.png',
    nums: 0
  },
  {
    key: '5',
    name: '退单/售后',
    icon: '/static/images/me-ic-service.png',
    nums: 0,
    width: 60,
    height: 50
  }
])

const serviceItems = ref([
  {
    name: '地址管理',
    icon: '/static/images/me-address.png',
    code: 'address'
  },
  {
    name: '我的收藏',
    icon: '/static/images/me-collect.png',
    code: 'collect'
  },
  {
    name: '个人设置',
    icon: '/static/images/me-self.png',
    code: 'setting'
  },
  {
    name: '客服服务',
    icon: '/static/images/me-message.png',
    code: 'services'
  },
  {
    name: '浏览历史',
    icon: '/static/images/me-good-brose.png',
    code: 'setting'
  },
  {
    name: '已删订单',
    icon: '/static/images/me-order-delete.png',
    code: 'setting'
  }
])

onLoad(() => {
  if (!logged.value) {
    return
  }
  _loadOrderSum()
})

watch(logged, (newValue, oldValue) => {
  if (!oldValue && newValue) {
    _loadOrderSum()
    return
  }
  //退出登录
  if (!newValue && oldValue) {
    orderItems.forEach((x) => (x.nums = 0))
  }
})

// 监听刷新统计总数
watch(canRefresh, (newValue, oldValue) => {
  if (!oldValue && newValue) {
    _loadOrderSum()
    countStore.setRefresh(false)
  }
})

const orderItemClick = (index: any) => {
  switch (index) {
    case '1':
    case '2':
    case '3':
      uni.$tm.u.routerTo('/pages/order/list/index?key=' + index, 'navigate')
      break
    case '4':
      uni.$tm.u.routerTo('/pages/order/evaluate/list', 'navigate')
      break
    default:
  }
}

const serviceItemClick = (code: string) => {
  switch (code) {
    case 'address':
      uni.$tm.u.routerTo('/pages/member/address/list', 'navigate')
      break
    case 'setting':
      uni.$tm.u.routerTo('/pages/member/setting/index', 'navigate')
      break
    case 'collect':
      uni.$tm.u.routerTo('/pages/member/collect/index', 'navigate')
      break
    case 'services':
      uni.$tm.u.routerTo('/pages/services/index', 'navigate')
      break
  }
}

const getphonenumber = (e: any) => {
  const { detail } = e
  if (!detail) {
    return
  }
  const { errMsg, code, encryptedData, iv } = detail
  if (errMsg.indexOf('fail') > 0) {
    return
  }

  bindPhone(code, encryptedData, iv)
    .then((res) => {
      userStore.setUserInfo({ ...userInfo, phone: res.data })
    })
    .catch((err: any) => {
      console.log(err)
    })
}

const _loadOrderSum = () => {
  sumCount()
    .then((res) => {
      const { toBePaidCount, toBeSendCount, toBeReceivedCount, toBeEvaluationCount, toBeService } = res.data
      orderItems.forEach((x) => {
        switch (x.key) {
          case '1':
            x.nums = toBePaidCount
            break
          case '2':
            x.nums = toBeSendCount
            break
          case '3':
            x.nums = toBeReceivedCount
            break
          case '4':
            x.nums = toBeEvaluationCount
            break
          case '5':
            x.nums = toBeService
            break
        }
      })
    })
    .catch((err: any) => {
      console.log(err)
    })
}
</script>
<style>
.box {
  position: relative;
}

.head_top {
  width: 100%;
  height: 300rpx;
  position: relative;
  overflow: hidden;
}
.head_top::after {
  content: '';
  width: 140%;
  height: 300rpx;
  position: absolute;
  z-index: -1;
  left: -20%;
  top: 0;
  border-radius: 0 0 50% 50%;
  background: #32cd32;
  box-shadow: 0px 1px 3px rgba(0, 255, 0, 0.2);
  backdrop-filter: 6px;
}

.avatar {
  height: 180rpx;
  width: 100%;
  padding: 10rpx 30rpx;
}

.menu {
  position: absolute;
  top: 170rpx;
  right: 0;
  left: 0;
  overflow: hidden;
}

.user-head-img {
  width: 120upx;
  height: 120upx;
  border-radius: 50%;
  overflow: hidden;
  background-color: rgba(255, 255, 255, 0.7);
}
</style>
