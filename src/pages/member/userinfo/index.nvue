<!--
 * @Author: Derek Xu
 * @Date: 2023-03-22 13:49:10
 * @LastEditors: Derek Xu
 * @LastEditTime: 2023-03-26 22:31:08
 * @FilePath: \xuct-group-purchase-uniapp\src\pages\member\userinfo\index.nvue
 * @Description: 
 * 
 * Copyright (c) 2023 by 楚恬商行, All Rights Reserved. 
-->
<template>
  <tm-app>
    <tm-navbar title="个人资料" color="#70DB93" fontColor="white" />
    <view class="avatar">
      <template v-if="userInfo.avatar">
        <image class="user-head-img" mode="aspectFill" :src="userInfo.avatar"></image>
      </template>
      <template v-else>
        <open-data type="userAvatarUrl"></open-data>
      </template>
      <tm-button
        size="small"
        font-color="white"
        :round="10"
        color="red"
        label="授权更新"
        @chooseavatar="chooseavatar"
        open-type="chooseAvatar"
      ></tm-button>
    </view>
    <tm-sheet>
      <!-- <tm-input
        v-model:model-value="phoneRef"
        :margin="[0, 30]"
        placeholder="请输入手机号"
        prefix="tmicon-phone-fill"
      ></tm-input> -->
      <view class="flex flex-row flex-wrap">
        <tm-icon :font-size="50" name="tmicon-playcircle-fill"></tm-icon>
        <input class="input" placeholder="请输入昵称" maxlength="15" :value="nickNameRef" />
      </view>
      <view>
        <input type="nickname" class="input" placeholder="请输入昵称" maxlength="15" :value="nickNameRef" />
      </view>

      <!-- <tm-input
        v-model:model-value="nickNameRef"
        :margin="[0, 30]"
        placeholder="请输入昵称"
        prefix="tmicon-user-fill"
      ></tm-input> -->
    </tm-sheet>

    <view class="button-bottom fixed pa-10" :style="{ height: _totalBarHeight + 'px' }">
      <tm-button block color="green" label="保存" @click="onSave"></tm-button>
    </view>
  </tm-app>
</template>
<script lang="ts" setup>
import { computed, ref } from 'vue'
import tmApp from '@/tmui/components/tm-app/tm-app.vue'
import tmNavbar from '@/tmui/components/tm-navbar/tm-navbar.vue'
import tmSheet from '@/tmui/components/tm-sheet/tm-sheet.vue'
import tmButton from '@/tmui/components/tm-button/tm-button.vue'
import tmIcon from '@/tmui/components/tm-icon/tm-icon.vue'
import { useUserHook } from '@/store/user'
import { saveUserInfo } from '@/api/user'
import { upload } from '@/services/upload'
import { message } from '@/utils/dialog'

const userStore = useUserHook()
const userInfo: User.UserInfo = userStore.getUserInfo
const phoneRef = ref<string>(userInfo?.phone || '')
const nickNameRef = ref<string>(userInfo?.nickname || '')
const loadingRef = ref<boolean>(false)
const _showSafe = ref<boolean>(false)

let sys = uni.getSystemInfoSync()

const win_bottom = sys?.safeAreaInsets?.bottom ?? 0
if (win_bottom > 0) {
  _showSafe.value = true
}

const _totalBarHeight = computed(() => {
  if (_showSafe.value) return 90
  return 75
})

const chooseavatar = (avatar: any) => {
  const tempPath = avatar?.detail?.avatarUrl
  if (!tempPath) {
    message({
      title: '头像选择失败',
      icon: 'error'
    })
    return
  }
  upload(tempPath, {}, ({ code, data }: API.UploadResult) => {
    if (code === -1) {
      message({
        title: data,
        icon: 'error'
      })
      return
    }
    userStore.setUserInfo({ ...userInfo, avatar: data })
  })
}

const onSave = () => {
  if (!phoneRef.value) {
    message({
      title: '电话不能为空',
      icon: 'error'
    })
    return
  }

  if (!uni.$tm.u.isPhone(phoneRef.value)) {
    message({
      title: '手机格式错误',
      icon: 'error'
    })
    return
  }

  if (!nickNameRef.value) {
    message({
      title: '昵称不能为空',
      icon: 'error'
    })
    return
  }

  loadingRef.value = true

  saveUserInfo(phoneRef.value, nickNameRef.value)
    .then(() => {
      userStore.setUserInfo({ ...userInfo, nickname: nickNameRef.value, phone: phoneRef.value })
      loadingRef.value = false
      uni.$tm.u.routerTo('', 'navigateBack')
    })
    .catch((err: any) => {
      console.log(err)
    })
}
</script>
<style>
.avatar {
  position: relative;
  width: 100%;
  height: 340upx;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: #70db93;
}

.bg-img {
  position: absolute;
  width: 100%;
  height: 100%;
}

.user-head-img {
  display: block;
  width: 160upx;
  height: 160upx;
  border-radius: 50%;
  overflow: hidden;
  background-color: rgba(255, 255, 255, 0.7);
}

.form {
  margin: 30px;
  background-color: #fff;
}

.input {
  background-color: rgba(245, 245, 245, 1);
  height: 80upx;
  line-height: 80upx;
  margin-bottom: 20upx;
}
</style>
