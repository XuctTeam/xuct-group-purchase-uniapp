<!--
 * @Author: Derek Xu
 * @Date: 2023-03-25 21:54:59
 * @LastEditors: Derek Xu
 * @LastEditTime: 2023-05-16 21:06:15
 * @FilePath: \xuct-group-purchase-uniapp\src\pages\member\address\list.nvue
 * @Description: 
 * Copyright (c) 2022 by 楚恬商行, All Rights Reserved. 
-->
<template>
  <tm-app class="flex flex-col">
    <tm-navbar title="收货地址" color="#32CD32" fontColor="#fff" blur></tm-navbar>
    <uv-bottom-bar-container>
      <tm-sheet :margin="[0, 0]" :padding="[20, 30]">
        <tm-input
          v-model="searchValue"
          prefix="tmicon-search"
          searchLabel="搜索"
          focusColor="green"
          placeholder="按名字或电话搜索"
          @search="onSearch"
        ></tm-input>
      </tm-sheet>
      <view class="flex flex-row flex-row-center-center" v-if="addressList.length === 0 && !load">
        <uv-empty></uv-empty>
      </view>
      <view v-else>
        <tm-sheet v-for="(item, index) in addressList" :key="index" :round="3" :shadow="2" :margin="[10]" @click="onSelect(item.id ?? '')">
          <view class="flex flex-row flex-row-center-between pa-10">
            <view>
              <view class="flex flex-row flex-row-center-between mb-10">
                <tm-tag color="green" size="s" label="默认" v-if="item.firstChoose === 1" :margin="[0, 0, 10, 0]"></tm-tag>
                <tm-text :font-size="30" :label="`${item.provinceName}${item.cityName}${item.countyName}`"></tm-text>
              </view>
              <tm-text :font-size="28" :label="item.detailInfo"></tm-text>
              <tm-text :font-size="28" :label="`${item.telNumber}${item.userName}`" class="mt-10"></tm-text>
            </view>
            <tm-icon name="tmicon-edit" @click="onEdit(item.id ?? '')"></tm-icon>
          </view>
        </tm-sheet>
      </view>
      <template #footer>
        <view class="flex flex-row flex-1 flex-row-center-between">
          <view class="flex flex-1">
            <tm-button block color="orange" @click="chooseaddress" :round="4" :padding="[0, 10]" label="微信导入"></tm-button>
          </view>
          <view class="w-10"></view>
          <view class="flex flex-1">
            <tm-button block color="green" :padding="[0, 10]" :round="4" label="新增" @click="toAdd"></tm-button>
          </view>
        </view>
      </template>
    </uv-bottom-bar-container>
  </tm-app>
</template>
<script lang="ts" setup>
import tmApp from '@/tmui/components/tm-app/tm-app.vue'
import tmNavbar from '@/tmui/components/tm-navbar/tm-navbar.vue'
import tmButton from '@/tmui/components/tm-button/tm-button.vue'
import uvEmpty from '@/components/uv-empty/uv-empty.vue'
import tmSheet from '@/tmui/components/tm-sheet/tm-sheet.vue'
import tmIcon from '@/tmui/components/tm-icon/tm-icon.vue'
import tmInput from '@/tmui/components/tm-input/tm-input.vue'
import tmText from '@/tmui/components/tm-text/tm-text.vue'
import tmTag from '@/tmui/components/tm-tag/tm-tag.vue'
import uvBottomBarContainer from '@/components/uv-bottom-bar-container/uv-bottom-bar-container.vue'
import { User } from '@/api/interface/user'

import { onLoad, onShow } from '@dcloudio/uni-app'
import { reactive, ref, getCurrentInstance } from 'vue'
import { userAddressList, saveUserAddress } from '@/api/modules/user'
import { loading, hideLoading } from '@/utils/dialog'

const load = ref(true)
const addressList = reactive<User.Address[]>([])
const searchValue = ref('')
const inType = ref('')
const refreshValue = ref<boolean>(false)
const $instance = ref<any>(getCurrentInstance()?.proxy)

onLoad((ops: any) => {
  const { type } = ops
  if (type) {
    inType.value = type
  }
  initData('')
})

onShow(() => {
  if (refreshValue.value) {
    initData('')
  }
})

const initData = (_search: string) => {
  addressList.length = 0
  load.value = true
  loading()
  userAddressList(_search)
    .then((res) => {
      addressList.push(...res.data)
      load.value = false
    })
    .catch((err) => {
      console.log(err)
      load.value = false
    })
    .finally(() => {
      hideLoading()
      if (refreshValue.value) {
        refreshValue.value = false
      }
    })
}

const chooseaddress = (e: any) => {
  console.log(e)
  uni.chooseAddress({
    success: (res: User.Address) => {
      if (res.errMsg == 'chooseAddress:ok') {
        const { errMsg, ...address } = res
        console.log(errMsg)
        saveUserAddress(address)
          .then(() => {
            initData('')
          })
          .catch((err: any) => {
            console.log(err)
          })
      }
    },
    fail: (e: any) => {
      console.log(e)
    }
  })
}

const onEdit = (id: string) => {
  uni.navigateTo({
    url: './index?id=' + id,
    events: {
      acceptDataFromDetail(data: any) {
        const { refresh } = data
        refreshValue.value = refresh ?? false
      }
    }
  })
}

const toAdd = () => {
  uni.navigateTo({
    url: './index',
    events: {
      acceptDataFromDetail(data: any) {
        const { refresh } = data
        refreshValue.value = refresh ?? false
      }
    }
  })
}

const onSearch = (e: any) => {
  initData(e)
}

const onSelect = (addressId: string) => {
  if (inType.value !== 'order') {
    return
  }
  let pages = getCurrentPages() // 当前页
  let beforePage = pages[pages.length - 2] // 上个页面
  if (beforePage !== undefined && beforePage.route === 'pages/order/confirm/index') {
    const channel = $instance.value?.getOpenerEventChannel()
    channel.emit('acceptDataFromDetail', { ...addressList.find((x) => x.id === addressId) })
  }
  uni.$tm.u.routerTo('', 'navigateBack')
}
</script>
<style></style>
