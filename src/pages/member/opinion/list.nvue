<template>
  <tm-app>
    <tm-navbar title="意见反馈" color="#32CD32" fontColor="#fff" blur></tm-navbar>
    <uv-bottom-bar-page>
      <template v-if="!load">
        <template v-if="opinions.length === 0">
          <tm-result :showBtn="false" color="green" subTitle="您还未反馈任何内容 T.T"></tm-result>
        </template>
        <template v-else>
          <tm-sheet :round="4" :margin="[10]" v-for="(item, i) in opinions" @click="onDetailClick(item.id ?? '')">
            <view class="flex flex-row flex-row-center-between">
              <tm-text :font-size="24" _class="font-weight-b" :label="formatType(item.type)"></tm-text>
              <tm-text :font-size="24" color="green" :label="item.status === 1 ? '已反馈' : '未反馈'"></tm-text>
            </view>
            <tm-divider></tm-divider>
            <view class="flex flex-row mb-20">
              <view class="w-140"><tm-text color="grey" :font-size="26" label="反馈时间："></tm-text></view>
              <tm-text :font-size="26" :label="formatData(item.createTime)"></tm-text>
            </view>
            <view class="flex flex-row flex-1">
              <view class="w-140">
                <tm-text color="grey" :font-size="26" label="反馈描述："></tm-text>
              </view>
              <tm-text :font-size="26" _class="text-overflow-2 word-break" :label="item.remarks"></tm-text>
            </view>
          </tm-sheet>
        </template>
      </template>
      <template v-slot:footer>
        <view class="flex-1">
          <tm-button label="反馈" :round="4" color="green" block @click="onClick"></tm-button>
        </view>
      </template>
    </uv-bottom-bar-page>
  </tm-app>
</template>
<script lang="ts" setup>
import { reactive, ref } from 'vue'
import tmApp from '@/tmui/components/tm-app/tm-app.vue'
import tmNavbar from '@/tmui/components/tm-navbar/tm-navbar.vue'
import tmCard from '@/tmui/components/tm-card/tm-card.vue'
import tmButton from '@/tmui/components/tm-button/tm-button.vue'
import tmResult from '@/tmui/components/tm-result/tm-result.vue'
import tmSheet from '@/tmui/components/tm-sheet/tm-sheet.vue'
import tmDivider from '@/tmui/components/tm-divider/tm-divider.vue'
import tmText from '@/tmui/components/tm-text/tm-text.vue'

import uvBottomBarPage from '@/components/uv-bottom-bar-page/uv-bottom-bar-page.vue'

import { onLoad, onShow } from '@dcloudio/uni-app'
import { opinionList } from '@/api/user'
import * as dayjs from '@/tmui/tool/dayjs/esm/index'
import { loading, hideLoading } from '@/utils/dialog'

const opinions = reactive<User.Opinion[]>([])
const load = ref<boolean>(false)
const refreshValue = ref<boolean>(false)
const DayJs = dayjs.default

const radioItemds = [
  {
    key: '1',
    label: '质量问题'
  },
  {
    key: '2',
    label: '送货问题'
  },
  {
    key: '3',
    label: '售后问题'
  },
  {
    key: '4',
    label: '账号问题'
  },
  {
    key: '5',
    label: '系统问题'
  },
  {
    key: '6',
    label: '意见反馈'
  }
]

onLoad(() => {
  initData()
})

onShow(() => {
  if (refreshValue.value) {
    initData()
  }
})

const initData = () => {
  load.value = true
  loading()
  opinionList()
    .then((res) => {
      opinions.length = 0
      opinions.push(...res.data)
      refreshValue.value = false
    })
    .catch((err: any) => {
      console.log(err)
    })
    .finally(() => {
      load.value = false
      hideLoading()
    })
}

const formatData = (date: Date) => {
  return DayJs(date).format('YYYY-MM-DD')
}

const formatType = (val: string) => {
  return radioItemds.find((item) => item.key === val)?.label
}

const onClick = () => {
  uni.navigateTo({
    url: './index',
    events: {
      acceptDataFromDetail(data: any) {
        const { refresh } = data
        refreshValue.value = refresh ?? false
      }
    }
  })
}

const onDetailClick = (id: string) => {
  uni.navigateTo({
    url: './detail?id=' + id,
    events: {
      acceptDataFromDetail(data: any) {
        const { refresh } = data
        refreshValue.value = refresh ?? false
      }
    }
  })
}
</script>
