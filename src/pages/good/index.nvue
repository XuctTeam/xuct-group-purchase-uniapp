<!--
 * @Author: Derek Xu
 * @Date: 2023-03-28 16:23:38
 * @LastEditors: Derek Xu
 * @LastEditTime: 2023-05-04 10:58:37
 * @FilePath: \xuct-group-purchase-uniapp\src\pages\good\index.nvue
 * @Description: 
 * 
 * Copyright (c) 2023 by 楚恬商行, All Rights Reserved. 
-->
<template>
  <tm-app>
    <tm-navbar title="商品详情" color="#32CD32" fontColor="#fff" blur></tm-navbar>
    <uv-bottom-bar-page :show-footer="!!logged">
      <tm-carousel autoplay :margin="[0, 0]" :height="700" :displayMultipleItems="0" :list="swiperImages" />
      <tm-sheet :margin="[10, 10, 10, 10]" :height="140" :round="4" :shadow="4">
        <view class="title">{{ name }}</view>
        <view class="flex flex-row flex-row-center-between mt-20">
          <view class="flex flex-row">
            <tm-text color="grey" :font-size="26" label="库存" />
            <view class="ml-8">
              <tm-text color="orange" :font-size="26" label="30" />
            </view>
          </view>
          <view class="flex flex-row">
            <tm-text color="grey" :font-size="26" label="热度"></tm-text>
            <view class="ml-8">
              <tm-text color="orange" :font-size="26" :label="browse" />
            </view>
          </view>
          <view class="flex flex-row">
            <tm-text color="grey" :font-size="26" label="销量"></tm-text>
            <view class="ml-8">
              <tm-text color="orange" :font-size="26" label="30" />
            </view>
          </view>
        </view>
      </tm-sheet>
      <view class="pa-10">
        <tm-html :content="detail" />
      </view>
      <template v-slot:footer>
        <view class="flex flex-row flex-1 flex-row-center-between">
          <tm-row :column="3" :width="300">
            <tm-col @click="toServices" :height="100">
              <tm-icon name=" tmicon-aliwangwang" :fontSize="36" />
              <tm-text color="grey" :font-size="24" label="客服" />
            </tm-col>
            <tm-col @click="toCart" :height="100">
              <tm-icon name="tmicon-shoppingcart" :fontSize="36" />
              <tm-text color="grey" :font-size="24" label="购物车" />
            </tm-col>
            <tm-col :height="100">
              <tm-icon name="tmicon-md-heart-empty" :fontSize="36" @click="onCllect" v-if="!userCollect" />
              <tm-icon name="tmicon-md-heart" color="red" :fontSize="36" @click="onCllect" v-else />
              <tm-text color="grey" :font-size="24" label="收藏" />
            </tm-col>
          </tm-row>
          <view class="flex flex-row flex-1 flex-row-center-end">
            <tm-button color="orange" _class="round-l-24 round-r-0" :round="5" label="加入购物车" :loading="addLoading" @click="onAddCart"></tm-button>
            <tm-button color="green" _class="round-r-24 round-l-0" label="立即下单" @click="onFastConfirm"></tm-button>
          </view>
        </view>
      </template>
    </uv-bottom-bar-page>
  </tm-app>
</template>

<script lang="ts" setup>
import { reactive, ref, nextTick, getCurrentInstance } from 'vue'
import tmApp from '@/tmui/components/tm-app/tm-app.vue'
import tmNavbar from '@/tmui/components/tm-navbar/tm-navbar.vue'
import tmCarousel from '@/tmui/components/tm-carousel/tm-carousel.vue'
import tmHtml from '@/tmui/components/tm-html/tm-html.vue'
import tmSheet from '@/tmui/components/tm-sheet/tm-sheet.vue'
import tmText from '@/tmui/components/tm-text/tm-text.vue'
import tmButton from '@/tmui/components/tm-button/tm-button.vue'
import tmIcon from '@/tmui/components/tm-icon/tm-icon.vue'
import uvBottomBarPage from '@/components/uv-bottom-bar-page/uv-bottom-bar-page.vue'
import tmRow from '@/tmui/components/tm-row/tm-row.vue'
import tmCol from '@/tmui/components/tm-col/tm-col.vue'
import { onLoad } from '@dcloudio/uni-app'
import { useUserHook } from '@/store'

import { getGood, collect, addCart, browseGood } from '@/api/good'
import { loading, hideLoading } from '@/utils/dialog'
const $instance = ref<any>(getCurrentInstance()?.proxy)
const idValue = ref<string>('')
const detail = ref<string>('')
const name = ref<string>('')
const browse = ref<number>(1)
const swiperImages: string[] = reactive([])
const userCollect = ref<boolean>(false)
const addLoading = ref<boolean>(false)

const store = useUserHook()
const logged = store.logged

onLoad((opts: any) => {
  const { id } = opts
  if (!id) {
    return
  }
  idValue.value = id
  _loadGood()
  nextTick(() => {
    _browseGood()
  })
})

const onCllect = () => {
  collect(idValue.value)
    .then(() => {
      userCollect.value = !userCollect.value
      setPageRefresh()
    })
    .catch((err) => {
      console.log(err)
    })
}

const onAddCart = () => {
  addLoading.value = true
  addCart(idValue.value)
    .then(() => {
      addLoading.value = false
    })
    .catch((err: any) => {
      console.log(err)
      addLoading.value = false
    })
}

const _loadGood = () => {
  loading()
  getGood(idValue.value)
    .then((res) => {
      const good: Good.GoodResult = res.data
      const swipers: string[] = good.swiperImages?.split(',') || []
      swiperImages.push(...swipers)
      detail.value = good.detail ?? ''
      name.value = good.name
      userCollect.value = good.collect ?? false
      browse.value = good.browse
    })
    .catch((err) => {
      console.log(err)
    })
    .finally(() => {
      hideLoading()
    })
}

const _browseGood = () => {
  browseGood(idValue.value)
    .then(() => {})
    .catch(() => {})
}

const onFastConfirm = () => {
  const gids = [idValue.value]
  uni.$tm.u.routerTo('/pages/order/confirm/index?scene=good&gids=' + JSON.stringify(gids), 'navigate')
}

const toServices = () => {
  uni.$tm.u.routerTo('/pages/services/index', 'navigate')
}

const toCart = () => {
  uni.$tm.u.routerTo('/pages/cart/index', 'switchTab')
}

const setPageRefresh = () => {
  let pages = getCurrentPages() // 当前页
  let beforePage = pages[pages.length - 2] // 上个页面
  const channel = $instance.value?.getOpenerEventChannel()
  if (beforePage !== undefined && beforePage.route === 'pages/member/collect/index') {
    channel.emit('acceptDataFromDetail', {
      refresh: true
    })
  }
}
</script>
<style>
.title {
  font-size: 30upx;
  font-weight: bold;
  color: black;
}

.between {
  flex-wrap: wrap;
  align-content: space-between;
}
</style>
